diff a/COCBot/functions/Village/Laboratory.au3 b/COCBot/functions/Village/Laboratory.au3	(rejected hunks)
@@ -12,10 +12,12 @@
 ; Link ..........: https://github.com/MyBotRun/MyBot/wiki
 ; Example .......: No
 ; ===============================================================================================================================
-Local $iSlotWidth = 94, $iDistBetweenSlots = 12, $iYMidPoint = 530; use for logic to upgrade troops.. good for generic-ness
-Local $iPicsPerPage = 12, $iPages = 4 ; use to know exactly which page the users choice is on
-Local $sLabWindow = "99,122,760,616", $sLabTroopsSection = "115,363,750,577"
-Local $sLabWindowDiam = GetDiamondFromRect($sLabWindow), $sLabTroopsSectionDiam = GetDiamondFromRect($sLabTroopsSection) ; easy to change search areas
+Local $iSlotWidth = 94, $iDistBetweenSlots = 12 ; use for logic to upgrade troops.. good for generic-ness
+Local $iYMidPoint = 468 ;Space between rows in lab screen.  CHANGE ONLY WITH EXTREME CAUTION.
+Local $iPicsPerPage = 12, $iPages = 4 ; used to know exactly which page the users choice is on
+Local $sLabWindow = "99,122,760,616", $sLabTroopsSection = "115,363,750,577", $sLabTroopLastPage = "435,363,750,577"
+;$sLabTroopLastPage for partial last page, currently 3 columns of siege machines.
+Local $sLabWindowDiam = GetDiamondFromRect($sLabWindow), $sLabTroopsSectionDiam = GetDiamondFromRect($sLabTroopsSection), $sLabTroopsLastPageDiam = GetDiamondFromRect($sLabTroopLastPage) ; easy to change search areas
 
 Func TestLaboratory()
 	Local $bWasRunState = $g_bRunState
@@ -24,6 +26,7 @@ Func TestLaboratory()
 	$g_bRunState = True
 	$g_bAutoLabUpgradeEnable = True
 	$g_sLabUpgradeTime = ""
+	$g_bSilentSetDebugLog = False
 	Local $Result = Laboratory(True)
 	$g_bRunState = $bWasRunState
 	$g_sLabUpgradeTime = $sWasLabUpgradeTime
@@ -33,6 +36,8 @@ EndFunc
 
 Func Laboratory($debug=False)
 
+	;SetLog("$g_bSilentSetDebugLog is " & $g_bSilentSetDebugLog) ;HarchH
+	;SetLog("$g_bDebugSetlog is " & $g_bDebugSetlog) ;HarchH
 	If Not $g_bAutoLabUpgradeEnable Then Return ; Lab upgrade not enabled.
 
 	If $g_iTownHallLevel < 3 Then
@@ -58,7 +63,7 @@ Func Laboratory($debug=False)
 	BuildingClickP($g_aiLaboratoryPos, "#0197")
 	If _Sleep($DELAYLABORATORY3) Then Return ; Wait for window to open
 
-	If Not FindResearchButton() Then Return False ; cant start becuase we cannot find the research button
+	If Not FindResearchButton() Then Return False ; cant start because we cannot find the research button
 
 	If ChkLabUpgradeInProgress() Then Return False ; cant start if something upgrading
 
@@ -68,15 +73,21 @@ Func Laboratory($debug=False)
 
 	; user made a specific choice of lab upgrade
 	If $g_iCmbLaboratory <> 0 Then
+		SetDebugLog("User picked to upgrade " & $g_avLabTroops[$g_iCmbLaboratory][0])
 		Local $iPage = Ceiling($g_iCmbLaboratory / $iPicsPerPage) ; page # of user choice
 		While($iCurPage < $iPage) ; go directly to the needed page
 			LabNextPage($iCurPage, $iPages, $iYMidPoint) ; go to next page of upgrades
 			$iCurPage += 1 ; Next page
 			If _Sleep(2000) Then Return
 		WEnd
-
+		SetDebugLog("On page " & $iCurPage & " of " & $iPages)
 		; Get coords of upgrade the user wants
-		local $aPageUpgrades = findMultiple($g_sImgLabResearch, $sLabTroopsSectionDiam, $sLabTroopsSectionDiam, 0, 1000, 0, "objectname,objectpoints", True) ; Returns $aCurrentTroops[index] = $aArray[2] = ["TroopShortName", CordX,CordY]
+		If $iCurPage >= $iPages Then ;Use last partial page
+		SetDebugLog("Finding on last page diamond")
+			local $aPageUpgrades = findMultiple($g_sImgLabResearch, $sLabTroopsLastPageDiam, $sLabTroopsLastPageDiam, 0, 1000, 0, "objectname,objectpoints", True) ; Returns $aCurrentTroops[index] = $aArray[2] = ["TroopShortName", CordX,CordY]
+		Else ;Use full page
+			local $aPageUpgrades = findMultiple($g_sImgLabResearch, $sLabTroopsSectionDiam, $sLabTroopsSectionDiam, 0, 1000, 0, "objectname,objectpoints", True) ; Returns $aCurrentTroops[index] = $aArray[2] = ["TroopShortName", CordX,CordY]
+		EndIf
 		Local $aCoords, $bUpgradeFound = False
 		If UBound($aPageUpgrades, 1) >= 1 Then ; if we found any troops
 			For $i = 0 To UBound($aPageUpgrades, 1) - 1 ; Loop through found upgrades
@@ -112,8 +123,15 @@ Func Laboratory($debug=False)
 
 	Else ; users choice is any upgrade
 		While($iCurPage <= $iPages)
-			local $aPageUpgrades = findMultiple($g_sImgLabResearch, $sLabTroopsSectionDiam, $sLabTroopsSectionDiam, 0, 1000, 0, "objectname,objectpoints", True) ; Returns $aCurrentTroops[index] = $aArray[2] = ["TroopShortName", CordX,CordY]
+			SetDebugLog("User picked any upgrade.")
+			If $iCurPage >= $iPages Then ;Use last partial page
+				SetDebugLog("Finding on last page diamond")
+				local $aPageUpgrades = findMultiple($g_sImgLabResearch, $sLabTroopsLastPageDiam, $sLabTroopsLastPageDiam, 0, 1000, 0, "objectname,objectpoints", True) ; Returns $aCurrentTroops[index] = $aArray[2] = ["TroopShortName", CordX,CordY]
+			Else ;Use full page
+				local $aPageUpgrades = findMultiple($g_sImgLabResearch, $sLabTroopsSectionDiam, $sLabTroopsSectionDiam, 0, 1000, 0, "objectname,objectpoints", True) ; Returns $aCurrentTroops[index] = $aArray[2] = ["TroopShortName", CordX,CordY]
+			EndIf
 			If UBound($aPageUpgrades, 1) >= 1 Then ; if we found any troops
+				SetDebugLog("Found " & UBound($aPageUpgrades, 1) & " possible on this page #" & $iCurPage)
 				For $i = 0 To UBound($aPageUpgrades, 1) - 1 ; Loop through found upgrades
 					Local $aTempTroopArray = $aPageUpgrades[$i] ; Declare Array to Temp Array
 
@@ -205,32 +223,45 @@ EndFunc
 ; get the cost of an upgrade based on its coords
 ; find image slot that we found so that we can read the cost to see if we can upgrade it... slots read 1-12 top to bottom so barb = 1, arch = 2, giant = 3, etc...
 Func GetLabCostResult($aCoords)
+	SetDebugLog("Getting lab cost.")
+	SetDebugLog("$iYMidPoint=" & $iYMidPoint)
 	Local $iCurSlotOnPage, $iCurSlotsToTheRight, $sCostResult
 	$iCurSlotsToTheRight = Ceiling( ( Int($aCoords[0]) - Int(StringSplit($sLabTroopsSection, ",")[1]) ) / ($iSlotWidth + $iDistBetweenSlots) )
 	If Int($aCoords[1]) < $iYMidPoint Then ; first row
+		SetDebugLog("First row.")
 		$iCurSlotOnPage = 2*$iCurSlotsToTheRight - 1
+		SetDebugLog("$iCurSlotOnPage=" & $iCurSlotOnPage)
 		$sCostResult = getLabUpgrdResourceWht( Int(StringSplit($sLabTroopsSection, ",")[1]) + 10 + ($iCurSlotsToTheRight-1)*($iSlotWidth + $iDistBetweenSlots),  Int(StringSplit($sLabTroopsSection, ",")[2]) + 76)
 	Else; second row
+		SetDebugLog("Second row.")
 		$iCurSlotOnPage = 2*$iCurSlotsToTheRight
-		$sCostResult = getLabUpgrdResourceWht( Int(StringSplit($sLabTroopsSection, ",")[1]) + 10 + ($iCurSlotsToTheRight-1)*($iSlotWidth + $iDistBetweenSlots),  $iYMidPoint + 76)
+		SetDebugLog("$iCurSlotOnPage=" & $iCurSlotOnPage)
+		$sCostResult = getLabUpgrdResourceWht( Int(StringSplit($sLabTroopsSection, ",")[1]) + 10 + ($iCurSlotsToTheRight-1)*($iSlotWidth + $iDistBetweenSlots),  $iYMidPoint + 76 + 2) ;was 76
 	EndIf
+	SetDebugLog("Cost found is " & $sCostResult)
 	Return $sCostResult
 EndFunc
 
-; if we are on last page, smaller clickdrag... for future dev: this is whatever is enough distance to move 6 off to the left and have the next page similarily aligned
+; if we are on last page, smaller clickdrag... for future dev: this is whatever is enough distance to move 6 off to the left and have the next page similarily aligned.  "-50" to avoid the white triangle.
 Func LabNextPage($iCurPage, $iPages, $iYMidPoint)
 	If $iCurPage >= $iPages Then Return ; nothing left to scroll
 	If $iCurPage = $iPages-1 Then ; last page
-		ClickDrag(720, $iYMidPoint, 480, $iYMidPoint) ;600
+		;Last page has 3 columns of icons.  3*(94+12)=3*106=318.  720-318=402
+		SetDebugLog("Drag to last page to pixel 401")
+		ClickDrag(720, $iYMidPoint-50, 401, $iYMidPoint) ;"-50" to avoid the little triangle.
+		;If _Sleep(4000) Then Return ;Settling time on last page not needed if not rubber-band bounce.
 	Else
-		ClickDrag(720, $iYMidPoint, 85, $iYMidPoint)
+		SetDebugLog("Drag to next full page.")
+		ClickDrag(720, $iYMidPoint-50, 85, $iYMidPoint) ;"-50" to avoid the little triangle.  Diagonal drag doesn't matter.  Every human will diagonal drag.
 	EndIf
+	
 EndFunc
 
 ; check the lab to see if something is upgrading in the lab already
 Func ChkLabUpgradeInProgress()
+	Return False ;HArchH
 	; check for upgrade in process - look for green in finish upgrade with gems button
-	If $g_bDebugSetlog Then SetLog("_GetPixelColor(730, 200): " & _GetPixelColor(730, 200, True) & ":A2CB6C", $COLOR_DEBUG)
+	SetDebugLog("_GetPixelColor(730, 200): " & _GetPixelColor(730, 200, True) & ":A2CB6C", $COLOR_DEBUG)
 	If _ColorCheck(_GetPixelColor(730, 200, True), Hex(0xA2CB6C, 6), 20) Then
 		SetLog("Laboratory Upgrade in progress, waiting for completion", $COLOR_INFO)
 		If _Sleep($DELAYLABORATORY2) Then Return
